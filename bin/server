#!/usr/bin/env node

/*eslint-disable*/

var fs = require('fs');
var path = require('path');
var http = require('http');
var parallel = require('async/parallel');
var express = require('express');
var webpack = require('webpack');
var devMiddleware = require('webpack-dev-middleware');
var hotMiddleware = require('webpack-hot-middleware');
var historyApiFallback = require('connect-history-api-fallback');
var portfinder = require('portfinder');
var clc = require('cli-color');
var webpackConfig = require(path.resolve(process.cwd(), 'webpack.config'));
var dl = require('devlisten');

var banner = [
  "         __                       ",
  "       /   )          /)          ",
  "_____ /   _  _/_ _   // _  ______.",
  "     /   (_(_(__(_(_(/_(_)(_/     ",
  "     \\___/               .-/â€”    ",
  "                        (_/       "
].join("\n");


function createExpressApp() {
  var app = express();

  app.use(historyApiFallback());

  var compiler = webpack(webpackConfig);

  app.use(devMiddleware(compiler, {
    publicPath: webpackConfig.output.publicPath,
    stats: {
      assets: true,
      chunkModules: false,
      chunkOrigins: false,
      chunks: false,
      colors: true,
      hash: false,
      timings: true,
      version: false
    }
  }));

  app.use(hotMiddleware(compiler, {log: false}));

  app.use(express.static('.'));

  return app;
}

dl.devlisten('catalog', createExpressApp(), function(err, results) {
  if (err) { throw err };

  var urls = results
    .map(function(x) { return clc.underline(x); })
    .join(' and ');

  console.log(clc.erase.screen);
  console.log(clc.red(banner));
  console.log(clc.red('\nCatalog server running at ' + urls) + '\n');
});
